konstructs {

  // Add my self to the "konstructs" object, in this case the
  // key "org/konstructs/grass" is anyting unique but it's
  // highly recommended to use your package namespace.
  org/konstructs/grass {

    // This is required, points to the class containing your actor
    class = org.konstructs.grass.GrassActor

    // A custom parameter for this plugin, the key "org/konstructs/grass/dirt"
    // is an unique key that I picked, it's someting unique to avoid name
    // conflicts if a 3rd party plugin adds more options.
    grows-on {
      org/konstructs/grass/dirt = org/konstructs/dirt
    }

    grows-under {
      org/konstructs/grass/vacuum = org/konstructs/vacuum
    }

    // Valid grass types
    types {
      org/konstructs/grass/default {
        block-type = org/konstructs/grass-dirt
      }
      org/konstructs/grass/warm {
        block-type = org/konstructs/grass/warm
      }
      org/konstructs/grass/autumn {
        block-type = org/konstructs/grass/autumn
      }
    }
  }

  // Extends konstructing and add our recept.
  org/konstructs/konstructing {
    konstructs {
      org/konstructs/grass-dirt {
        match {
          stacks = [
            {
              id = org/konstructs/dirt,
              amount = 2
            }
          ]
          rows = 1
          columns = 1
        }
        result.id = org/konstructs/grass-dirt
      }
    }
  }

  // Register our two new blocks in the servers block manager.
  org/konstructs/block-manager {
    blocks {
      org/konstructs/grass/warm {
        faces = [1, 1, 2, 0, 1, 1]
      }
      org/konstructs/grass/autumn {
        faces = [1, 1, 2, 0, 1, 1]
      }
    }
  }

  // Add our self to "block-update-events" and ask to get a copy of
  // updated block events.
  universe {
    block-update-events {
       org/konstructs/grass = org/konstructs/grass
    }
  }

}
